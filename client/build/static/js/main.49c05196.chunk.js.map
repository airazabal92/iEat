{"version":3,"sources":["utils/API.js","components/SignUpForm/index.js","pages/SignUp.js","utils/Spoonacular.js","components/RecipeHeader/index.js","components/RecipeItem/index.js","pages/Recipes.js","components/ShoppingList/index.js","pages/Shopping.js","components/Navbar/index.js","pages/Login.js","components/LogOut/index.js","App.js","serviceWorker.js","index.js"],"names":["user","console","log","axios","get","loginInfo","post","userData","SignUpForm","props","className","id","htmlFor","value","name","onChange","handleInputChange","type","placeholder","email","password","calories","class","for","dietRestrictions","dietType","city","state","zipCode","onClick","handleFormSubmit","SignUp","useState","setUser","useEffect","API","then","res","catch","err","event","preventDefault","window","location","replace","target","handleSelect","e","apiKey","query","RecipeHeader","userName","Card","Meta","RecipeItem","style","width","cover","alt","src","img","href","source","Recipes","recipes","setUserData","idTitleSourceURL","imgIngredients","finalRecipes","finalRecipesDOM","setFinalRecipesDOM","data","JSON","stringify","Spoonacular","i","push","week","monday","meals","title","sourceUrl","tuesday","wednesday","thursday","friday","saturday","sunday","Promise","resolve","reject","queryURLImgs","ingredients","qty","units","extendedIngredients","length","measures","us","amount","unitLong","image","response","resData","setTimeout","j","background","map","recipe","index","key","parseInt","xs","sm","md","lg","xl","ShoppingList","handleSubmitBtn","Shopping","_id","Array","isArray","item","Header","Layout","Navbar","Menu","SubMenu","theme","mode","selectedKeys","pathname","Item","to","float","React","Component","LogIn","setEmail","setPassword","styles","backgroundColor","padding","errorLogin","margin","textAlign","fontSize","fontWeight","onSubmit","errorDiv","document","getElementById","innerHTML","FormGroup","controlId","size","FormLabel","FormControl","autoFocus","Button","block","disabled","LogOut","App","exact","path","component","Login","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.49c05196.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  //Get user information from the database\n  getUserInfo: function (user) {\n    console.log(\"getUserInfo - user\", user);\n    return axios.get(\"/user\", user);\n  },\n  // Logout the current user\n  logoutUser: function () {\n    console.log(\"logoutUser\");\n    return axios.get(\"/logout\");\n  },\n  // Validate user login credentials\n  validateUser: function (loginInfo) {\n    console.log(\"validateUser - loginInfo\", loginInfo);\n    return axios.post(\"/login\", loginInfo);\n  },\n  // Add recipes to database\n  recordRecipes: function (userData) {\n    return axios.post(\"/api/recipes\", userData);\n  },\n\n  getRecipes: function (userData) {\n    console.log(\"API getRecipes\", userData);\n    return axios.get(\"/api/recipes/\" + userData.name);\n  },\n\n  createUser: function (userData) {\n    return axios.post(\"/register\", userData);\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SignUpForm(props) {\n  return (\n    <form className=\"signup\">\n      <center>\n        <h1 id=\"logo\">\n          <i className=\"fas fa-utensils\"></i> iEat\n        </h1>\n        <hr></hr>\n\n        <p id=\"welcome\">Welcome! Please sign up below.</p>\n        <br></br>\n      </center>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Full Name:</label>\n        <input\n          value={props.name}\n          onChange={props.handleInputChange}\n          name=\"name\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in your name\"\n          id=\"name\"\n        />\n        <br></br>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          value={props.email}\n          onChange={props.handleInputChange}\n          name=\"email\"\n          type=\"email\"\n          className=\"form-control\"\n          placeholder=\"Type in your email\"\n          id=\"email\"\n        />\n        <br></br>\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          value={props.password}\n          onChange={props.handleInputChange}\n          name=\"password\"\n          type=\"password\"\n          className=\"form-control\"\n          placeholder=\"Type in your password\"\n          id=\"password\"\n        />\n        <br></br>\n        <label htmlFor=\"calories\">Caloric Intake</label>\n        <input\n          value={props.calories}\n          onChange={props.handleInputChange}\n          name=\"calories\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"calories\"\n          placeholder=\"Caloric Intake (Ex: 2500, 2000, etc...)\"\n        />\n        <br></br>\n\n        <label for=\"restrict-option\">\n          What kind of dietary restrictions do you have?\n        </label>\n        {console.log(props.dietRestrictions, \"Diet Restriction\")}\n        <select\n          name=\"dietRestrictions\"\n          onChange={props.handleInputChange}\n          value={props.dietRestrictions}\n          class=\"form-control\"\n          id=\"restrict-option\"\n        >\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Egg\">Egg</option>\n          <option value=\"Gluten\">Gluten</option>\n          <option value=\"Grain\">Grain</option>\n          <option value=\"Peanut\">Peanut</option>\n          <option value=\"Seafood\">Seafood</option>\n          <option value=\"Sesame\">Sesame</option>\n          <option value=\"Shellfish\">Shellfish</option>\n          <option value=\"Soy\">Soy</option>\n          <option value=\"Sulfite\">Sulfite</option>\n          <option value=\"Tree Nut\">Tree Nut</option>\n          <option value=\"Wheat\">Wheat</option>\n        </select>\n        <br></br>\n\n        <label for=\"diet-option\">\n          What kind of diet are you interested in?\n        </label>\n        <select\n          onChange={props.handleInputChange}\n          name=\"dietType\"\n          value={props.dietType}\n          class=\"form-control\"\n          id=\"diet-option\"\n        >\n          <option value=\"Gluten Free\">Gluten Free</option>\n          <option value=\"Ketogenic\">Ketogenic</option>\n          <option value=\"Vegetarian\">Vegetarian</option>\n          <option value=\"Lacto-Vegetarian\">Lacto-Vegetarian</option>\n          <option value=\"Ovo-Vegetarian\">Ovo-Vegetarian</option>\n          <option value=\"Vegan\">Vegan</option>\n          <option value=\"Pescatarian\">Pescatarian</option>\n          <option value=\"Paleo\">Paleo</option>\n          <option value=\"Primal\">Primal</option>\n          <option value=\"Whole30\">Whole30</option>\n        </select>\n        <br></br>\n\n        <label for=\"city-input\">City</label>\n        <input\n          value={props.city}\n          onChange={props.handleInputChange}\n          name=\"city\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"city-input\"\n          placeholder=\"City\"\n        />\n        <br></br>\n\n        <label for=\"state-input\">State</label>\n        <input\n          value={props.state}\n          onChange={props.handleInputChange}\n          name=\"state\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"state-input\"\n          placeholder=\"State\"\n        />\n        <br></br>\n\n        <label for=\"zipcode-input\">Zip Code</label>\n        <input\n          value={props.zipCode}\n          onChange={props.handleInputChange}\n          name=\"zipCode\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"zipcode-input\"\n          placeholder=\"Zip Code\"\n        />\n        <br></br>\n\n        <center>\n          <button\n            onClick={props.handleFormSubmit}\n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Sign Up\n          </button>\n        </center>\n      </div>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport SignUpForm from \"../components/SignUpForm\";\nfunction SignUp() {\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    calories: 0,\n    dietRestrictions: \"\",\n    dietType: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\"\n    // Add remaining properties here\n  });\n  // After user has entered the sign up form, we will check the user who sign up for the recipes to see if he/she already exists in database\n  useEffect(() => {\n    console.log(\"useEffect\");\n    API.getUserInfo(user)\n      .then((res) => {\n        console.log(\"res\", res);\n      })\n      .catch((err) => console.log(err));\n  }, [user]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n    console.log(value);\n  };\n\n  const handleSelect = (e) => {\n    console.log(\"SELECTION\", e);\n    // setUser({ ...user, [name]: value });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    API.createUser(user)\n      .then((res) => {\n        console.log(\"handleFormSubmit res:\", res);\n        // JYH - initialize the fields\n        setUser({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          calories: 0,\n          dietRestrictions: \"\",\n          dietType: \"\",\n          city: \"\",\n          state: \"\",\n          zipCode: \"\"\n        });\n        // JYH - redirect to the signin page\n        window.location.replace(\"/login\");\n      })\n      .catch(() => console.log(\"handleFormSubmit saveUser ERROR\"));\n  };\n  return (\n    <>\n      {console.log(user.dietRestrictions, \"Sign Up\")}\n      <SignUpForm\n        handleFormSubmit={handleFormSubmit}\n        handleInputChange={handleInputChange}\n        handleSelect={handleSelect}\n        name={user.name}\n        email={user.email}\n        password={user.password}\n        calories={user.calories}\n        dietRestrictions={user.dietRestrictions}\n        dietType={user.dietType}\n        city={user.city}\n        state={user.state}\n        zipCode={user.zipCode}\n      ></SignUpForm>\n    </>\n  );\n}\nexport default SignUp;\n","import axios from \"axios\";\n\nexport default {\n  getRecipes: function (dietRestrictions, calories, dietType, apiKey) {\n    return axios.get(\n      \"https://api.spoonacular.com/mealplanner/generate?apiKey=\" +\n        apiKey +\n        \"&timeframe=week?targetCalories=\" +\n        calories +\n        \"?diet=\" +\n        dietType +\n        \"?exclude=\" +\n        dietRestrictions\n    );\n  },\n  getImgIngredients: function (query) {\n    return axios.get(query);\n  }\n};\n","import React from \"react\";\n\nfunction RecipeHeader(props) {\n  console.log(\"PROPS\", props);\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <center>\n          <h1 id=\"logo\">\n            <i className=\"fas fa-utensils\"></i> iEat\n          </h1>\n        </center>\n        <h2 className=\" text-center\">Welcome {props.userName}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeHeader;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Card } from \"antd\";\nimport { Button } from \"antd\";\n\nconst { Meta } = Card;\n\nfunction RecipeItem(props) {\n  return (\n    <Card style={{ width: 350 }} cover={<img alt=\"Recipe\" src={props.img} />}>\n      <h5>{props.name}</h5>\n      <center>\n        <Button>\n          <a target=\"_blank\" href={props.source}>\n            View Recipe\n          </a>\n        </Button>\n      </center>\n    </Card>\n  );\n}\n\nexport default RecipeItem;\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport Spoonacular from \"../utils/Spoonacular\";\nimport RecipeHeader from \"../components/RecipeHeader\";\nimport RecipeItem from \"../components/RecipeItem\";\nimport { Row, Col } from \"antd\";\n\nfunction Recipes() {\n  // Spoonacular API Key\n\n  const spoonacularAPI = \"9a8e923e614c40a79b5c4beedfcd0b7d\";\n\n  // userData holds inputted fields from sign up form\n  // const [userData, setUserData] = useState({\n  //   name: \"Amanda\",\n  //   dietRestrictions: \"peanuts\",\n  //   calories: 2000,\n  //   dietType: \"Gluten Free\",\n  //   recipes: []\n  // });\n\n  const styles = {\n    backgroundColor: {\n      background: \"#fff\"\n    }\n  };\n\n  const [userData, setUserData] = useState({\n    name: \"\",\n    dietRestrictions: \"\",\n    calories: 0,\n    dietType: \"\",\n    recipes: []\n  });\n\n  // Array of recipe ids, title, sourceURL\n  const idTitleSourceURL = [];\n\n  // Array of objects with id, img, ingredients, qty, and units\n  const imgIngredients = [];\n\n  let finalRecipes = [];\n\n  // Final recipes array of objects with id, title, sourceURL, img, ingredients, qty, and units\n  const [finalRecipesDOM, setFinalRecipesDOM] = useState([]);\n\n  useEffect(() => {\n    /* -------------------------------------------------------\n    TODO: CALL BACK END TO GET USER DATA - NOT WORKING\n    ---------------------------------------------------------*/\n\n    // TODO: Call backend to get the user data\n    API.getUserInfo()\n      .then((res) => {\n        console.log(\"User info\", res);\n        setUserData({\n          name: res.data.name,\n          dietRestrictions: res.data.dietRestrictions,\n          calories: res.data.calories,\n          dietType: res.data.dietType\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        window.location.replace(\"/login\");\n      });\n\n    console.log(JSON.stringify(userData));\n\n    /* -------------------------------------------------------\n    TODO: CALL BACK END TO GET RECIPES FOR SPECIFIC USER\n    \n    If user has recipes, display those recipes. \n    If not, got ahead and make the API call\n    ---------------------------------------------------------*/\n\n    // Get all recipes from Spoonacular API\n    getAllRecipes(\n      userData.dietRestrictions,\n      userData.calories,\n      userData.dietType,\n      spoonacularAPI\n    );\n  }, []);\n\n  // Set Spoonacular API res.data to originalRecipes variable\n  function getAllRecipes(dietRestrictions, calories, dietType, apiKey) {\n    Spoonacular.getRecipes(dietRestrictions, calories, dietType, apiKey)\n      .then((res) => {\n        console.log(res);\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Monday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.monday.meals[i].id,\n            title: res.data.week.monday.meals[i].title,\n            sourceUrl: res.data.week.monday.meals[i].sourceUrl\n          });\n        }\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Tuesday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.tuesday.meals[i].id,\n            title: res.data.week.tuesday.meals[i].title,\n            sourceUrl: res.data.week.tuesday.meals[i].sourceUrl\n          });\n        }\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Wednesday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.wednesday.meals[i].id,\n            title: res.data.week.wednesday.meals[i].title,\n            sourceUrl: res.data.week.wednesday.meals[i].sourceUrl\n          });\n        }\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Thursday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.thursday.meals[i].id,\n            title: res.data.week.thursday.meals[i].title,\n            sourceUrl: res.data.week.thursday.meals[i].sourceUrl\n          });\n        }\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Friday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.friday.meals[i].id,\n            title: res.data.week.friday.meals[i].title,\n            sourceUrl: res.data.week.friday.meals[i].sourceUrl\n          });\n        }\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Saturday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.saturday.meals[i].id,\n            title: res.data.week.saturday.meals[i].title,\n            sourceUrl: res.data.week.saturday.meals[i].sourceUrl\n          });\n        }\n\n        // Get ids, name of day, recipe name, info URL, and summary for all Sunday\n        for (let i = 0; i < 3; i++) {\n          idTitleSourceURL.push({\n            id: res.data.week.sunday.meals[i].id,\n            title: res.data.week.sunday.meals[i].title,\n            sourceUrl: res.data.week.sunday.meals[i].sourceUrl\n          });\n        }\n        console.log(idTitleSourceURL);\n      })\n      .then(() => {\n        console.log(\"getting id, img, ingredients, qty, and units\");\n        getRecipeImgIngredients().then((response) => {\n          console.log(\"after getting recipe img, ingredients, etc\");\n          console.log(\"RESPONSE\", response);\n\n          let resData = response;\n\n          // Find the corresponding ids in the response array of objects with the mealsIdsTitleSource object\n          // Add the title and source URL to the response object\n\n          setTimeout(function () {\n            for (let i = 0; i < resData.length; i++) {\n              for (let j = 0; j < idTitleSourceURL.length; j++) {\n                if (idTitleSourceURL[j].id === resData[i].id) {\n                  console.log(\"MATCH\");\n                  resData[i][\"name\"] = idTitleSourceURL[j].title;\n                  resData[i][\"sourceUrl\"] = idTitleSourceURL[j].sourceUrl;\n                }\n              }\n            }\n            finalRecipes = resData;\n            console.log(\"FINAL DATA: \");\n            console.log(finalRecipes);\n\n            setFinalRecipesDOM(finalRecipes);\n            console.log(\"FINAL DATA FOR DOM set\");\n            /* -------------------------------------------------------\n                TODO: SEND FINAL DATA TO DATABASE \n            ---------------------------------------------------------*/\n            storeRecipes();\n          }, 3500);\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Get recipe images and ingredients\n  function getRecipeImgIngredients() {\n    return new Promise(function (resolve, reject) {\n      for (let i = 0; i < idTitleSourceURL.length; i++) {\n        let queryURLImgs =\n          \"https://api.spoonacular.com/recipes/\" +\n          idTitleSourceURL[i].id +\n          \"/information?apiKey=\" +\n          spoonacularAPI;\n\n        Spoonacular.getImgIngredients(queryURLImgs).then((res) => {\n          console.log(res);\n          let ingredients = [];\n          let qty = [];\n          let units = [];\n\n          for (let i = 0; i < res.data.extendedIngredients.length; i++) {\n            ingredients.push(res.data.extendedIngredients[i].name);\n            qty.push(res.data.extendedIngredients[i].measures.us.amount);\n            units.push(res.data.extendedIngredients[i].measures.us.unitLong);\n          }\n\n          imgIngredients.push({\n            id: idTitleSourceURL[i].id,\n            img: res.data.image,\n            ingredients: ingredients,\n            qty: qty,\n            units: units\n          });\n        });\n      }\n      resolve(imgIngredients);\n    });\n  }\n\n  /* -------------------------------------------------------\n                TODO: SEND FINAL DATA TO DATABASE \n    ---------------------------------------------------------*/\n\n  function storeRecipes() {\n    console.log(\"Store recipes\");\n\n    userData.recipes = finalRecipes;\n\n    API.recordRecipes(userData)\n      .then((res) => {\n        console.log(\"Recipes added to database!\");\n        console.log(res.data.name);\n        console.log(res.data.recipes[0]);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div style={styles.backgroundColor}>\n      {/* <RecipeHeader userName={userData.name}></RecipeHeader> */}\n      {/* //TODO: wait until user is defined to add name to page */}\n      {userData != [] ? (\n        <RecipeHeader userName={userData.name}></RecipeHeader>\n      ) : (\n        <p>User doesn't exist</p>\n      )}\n      <h3 className=\"text-center\">Meal Plan For The Week</h3>\n      <hr></hr>\n      <br></br>\n      <Row type=\"flex\">\n        {finalRecipesDOM != [] ? (\n          finalRecipesDOM.map((recipe, index) => (\n            <Col\n              key={parseInt(recipe.id + 1)}\n              xs={24}\n              sm={24}\n              md={8}\n              lg={8}\n              xl={8}\n            >\n              <center>\n                <RecipeItem\n                  img={recipe.img}\n                  name={recipe.name}\n                  source={recipe.sourceUrl}\n                  key={index}\n                ></RecipeItem>\n              </center>\n              <br />\n            </Col>\n          ))\n        ) : (\n          <p>Loading Recipes...</p>\n        )}\n      </Row>\n    </div>\n  );\n}\n\nexport default Recipes;\n","import React from \"react\";\nimport \"./style.css\";\nimport \"antd/dist/antd.css\";\nimport { Button } from \"antd\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction ShoppingList(props) {\n  return (\n    <form className=\"shopping\">\n      <div className=\"form-group\">\n        <center>\n          <Button\n            type=\"primary\"\n            onClick={props.handleSubmitBtn}\n            className=\"btn btn-success\"\n          >\n            Shopping List\n          </Button>\n        </center>\n      </div>\n    </form>\n  );\n}\n\nexport default ShoppingList;\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport ShoppingList from \"../components/ShoppingList\";\n\nfunction Shopping() {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    // getCurrentUser();\n    API.getUserInfo()\n      .then((res) => {\n        console.log(\"getCurrentUser - res.data\", res.data);\n        setUser({\n          calories: res.data.calories,\n          city: res.data.calories,\n          dietRestrictions: res.data.dietRestrictions,\n          dietType: res.data.dietType,\n          email: res.data.email,\n          name: res.data.name,\n          password: res.data.password,\n          recipes: res.data.recipes,\n          state: res.data.state,\n          zipCode: res.data.zipCode,\n          _id: res.data._id\n        });\n        console.log(\"setUser - user\", user);\n      })\n      .catch((err) => {\n        console.log(\"getCurrentUser\", err);\n        window.location.replace(\"/login\");\n      });\n  }, []);\n\n  const handleSubmitBtn = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div>\n      <h1>{user.name}'s Shopping List</h1>\n      <ShoppingList\n        handleSubmitBtn={handleSubmitBtn}\n        userName={user.userName}\n      ></ShoppingList>\n      <ul>\n        {Array.isArray(user.recipes) && user.recipes.length\n          ? user.recipes.map((recipe) =>\n              recipe.ingredients.map((item, index) =>\n                index === 0 ? (\n                  <li className=\"list-group-item\">\n                    <h1>{recipe.name}</h1>\n                  </li>\n                ) : (\n                  <li className=\"list-group-item\">\n                    {item} {recipe.qty[index]} {recipe.units[index]}\n                  </li>\n                )\n              )\n            )\n          : console.log(\"Array is empty\")}\n      </ul>\n    </div>\n  );\n}\n\nexport default Shopping;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Breadcrumd } from \"antd\";\n\nconst { Header } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <Header>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          selectedKeys={[window.location.pathname]}\n        >\n          <Menu.Item key=\"1\">\n            <Link to=\"/recipes\">Recipes</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/shopping\">Shopping list</Link>\n          </Menu.Item>\n\n          <Menu.Item style={{ float: \"right\" }} key=\"4\">\n            <Link to=\"/logout\">Log Out</Link>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }} key=\"5\">\n            <Link to=\"/signup\">Sign Up</Link>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }} key=\"6\">\n            <Link to=\"/login\">Sign In </Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n    );\n  }\n}\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"../components/LoginForm/style.css\";\n\nfunction LogIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const styles = {\n    backgroundColor: {\n      background: \"#fff\",\n      padding: \"45px\",\n      width: \"65%\"\n    },\n\n    errorLogin: {\n      background: \"#fff\",\n      width: \"400px\",\n      margin: \"auto\",\n      textAlign: \"center\",\n      fontSize: \"14px\",\n      fontWeight: \"800\"\n    }\n  };\n\n  const validateForm = function () {\n    return email.length > 0 && password.length > 0;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    API.validateUser({ email, password })\n      .then((res) => {\n        console.log(\"handleSubmit res:\", res);\n        // JYH - initialize the fields\n        setEmail(\"\");\n        setPassword(\"\");\n        // JYH - redirect to the recipes page\n        window.location.replace(\"/recipes\");\n      })\n      .catch(() => {\n        console.log(\"handSubmit validateUser ERROR\");\n        var errorDiv = document.getElementById(\"error\");\n        errorDiv.innerHTML = \"Invalid email or password, please try again.\";\n        errorDiv.style.padding = \"35px\";\n      });\n  };\n\n  return (\n    <div className=\"Login\">\n      <form style={styles.backgroundColor} onSubmit={handleSubmit}>\n        <center>\n          <h1 id=\"logo\">\n            <i className=\"fas fa-utensils\"></i> iEat\n          </h1>\n        </center>\n        <FormGroup controlId=\"email\" size=\"large\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" size=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block size=\"large\" disabled={!validateForm()} type=\"submit\">\n          <strong>Login</strong>\n        </Button>\n      </form>\n      <br></br>\n      <div style={styles.errorLogin} id=\"error\"></div>\n    </div>\n  );\n}\nexport default LogIn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\n\nfunction LogOut() {\n  API.logoutUser().then(() => {\n    console.log(\"LogOut\");\n    window.location.replace(\"/login\");\n  });\n}\n\nexport default LogOut;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n// import navbar\nimport SignUp from \"./pages/SignUp.js\";\nimport Recipes from \"./pages/Recipes.js\";\nimport Shopping from \"./pages/Shopping.js\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./pages/Login.js\";\nimport LogOut from \"./components/LogOut\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Route exact path=\"/\" component={SignUp} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/recipes\" component={Recipes} />\n        <Route exact path=\"/shopping\" component={Shopping} />\n        <Route exact path=\"/logout\" component={LogOut} />\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}